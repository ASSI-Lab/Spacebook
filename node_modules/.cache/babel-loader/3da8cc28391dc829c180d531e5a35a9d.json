{"ast":null,"code":"import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getScrollSum from \"./getScrollSum.js\";\nimport unwrapVirtualElement from \"./unwrapVirtualElement.js\";\nimport { isElement } from \"./instanceOf.js\"; // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\nexport default (function (elementOrVirtualElement, commonOffsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var element = unwrapVirtualElement(elementOrVirtualElement);\n  var rect = getBoundingClientRect(element);\n  var offsetParentRect = isElement(commonOffsetParent) && !isFixed ? getBoundingClientRect(commonOffsetParent) : {\n    left: 0,\n    top: 0\n  };\n  var offsetParentScrollSum = getScrollSum(isFixed ? [] : [commonOffsetParent]);\n  var width = rect.width;\n  var height = rect.height;\n  var x = rect.left + offsetParentScrollSum.scrollLeft - offsetParentRect.left;\n  var y = rect.top + offsetParentScrollSum.scrollTop - offsetParentRect.top;\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n});","map":null,"metadata":{},"sourceType":"module"}